version: '3.8'

services:
  mongo-1:
    container_name: 'mongo-1-container'
    entrypoint: >
      /bin/bash -c ' openssl rand -base64 756 > /data/keyfile.key && chmod 400 /data/keyfile.key && chown mongodb:mongodb /data/keyfile.key && /usr/local/bin/docker-entrypoint.sh mongod --replSet rs0 --keyFile /data/keyfile.key --bind_ip_all'
    image: 'mongo:7.0.0'
    ports:
      - 127.0.10.1:27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - './mongo/mongo1data:/data/db'
      - './mongo/mongo1config:/data/configdb'
      - './mongo/sharedconfig:/data'
    healthcheck:
      test: mongosh -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --eval "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo-1:27017',priority:1},{_id:1,host:'mongo-2:27017',priority:0.5},{_id:2,host:'mongo-3:27017',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - 'mynetwork'
    restart: unless-stopped

  mongo-2:
    container_name: 'mongo-2-container'
    image: 'mongo:7.0.0'
    ports:
      - 127.0.10.2:27017:27017
    volumes:
      - './mongo/mongo2data:/data/db'
      - './mongo/mongo2config:/data/configdb'
      - './mongo/sharedconfig:/data'
    command:
      [
        '--replSet',
        'rs0',
        '--bind_ip_all',
        '--port',
        '27017',
        '--keyFile',
        '/data/keyfile.key'
      ]
    networks:
      - 'mynetwork'
    restart: unless-stopped

  mongo-3:
    container_name: 'mongo-3-container'
    image: 'mongo:7.0.0'
    ports:
      - 127.0.10.3:27017:27017
    volumes:
      - './mongo/mongo3data:/data/db'
      - './mongo/mongo3config:/data/configdb'
      - './mongo/sharedconfig:/data'
    command:
      [
        '--replSet',
        'rs0',
        '--bind_ip_all',
        '--port',
        '27017',
        '--keyFile',
        '/data/keyfile.key'
      ]
    networks:
      - 'mynetwork'
    restart: unless-stopped

  fimi_redis:
    container_name: fimi_redis
    image: redis:alpine
    expose:
      - 6379
    ports:
      - 6379:6379
    restart: unless-stopped

  redis_commander:
    container_name: redis_commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:fimi_redis:6379
    ports:
      - 8088:8081
    depends_on:
      - fimi_redis
    restart: unless-stopped

networks:
  default:
    driver: bridge
  mynetwork:
    driver: bridge

volumes:
  mongo1data:
  mongo1config:
  mongo2data:
  mongo2config:
  mongo3data:
  mongo3config:
  sharedconfig:
